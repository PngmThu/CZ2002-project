
import java.io.IOException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.List;
import java.util.ArrayList;

import java.nio.file.Files;
import java.io.*;
import java.util.*;
import java.lang.Object;
import java.nio.file.Paths;

// Note : When structure of the Object type (the class file) in the list changed
// the Serialized file may fail.
public class SerializeDB
{
	public static List readSerializedObject(String filename) {
		List pDetails = null;
		FileInputStream fis = null;
		ObjectInputStream in = null;
		try {
			fis = new FileInputStream(filename);
			in = new ObjectInputStream(fis);
			pDetails = (ArrayList) in.readObject();
			in.close();
		} catch (IOException ex) {
			ex.printStackTrace();
		} catch (ClassNotFoundException ex) {
			ex.printStackTrace();
		}
		// print out the size
		//System.out.println(" Details Size: " + pDetails.size());
		//System.out.println();
		return pDetails;
	}

	public static void writeSerializedObject(String filename, List list) {
		FileOutputStream fos = null;
		ObjectOutputStream out = null;
		try {
			fos = new FileOutputStream(filename);
			out = new ObjectOutputStream(fos);
			out.writeObject(list);
			out.close();
		//	System.out.println("Object Persisted");
		} catch (IOException ex) {
			ex.printStackTrace();
		}
	}
	
	public static List modifySerializedObject(String filename, Object obj) {
		/************************************************************
		List originList;
		List newList = null;
		try	{
			// read from serialized file the list of professors
			originList = (ArrayList)SerializeDB.readSerializedObject(filename);
				
			for (int i = 0 ; i < originList.size() ; i++) {
				Professor p = (Professor)originList.get(i);
				if (p.equals(obj)) {
					newList.add(obj);   //Add modified data
				} else {
					newList.add(p);
				}
			}
			//Delete all data
//			new PrintWriter(filename).close();
//			assertEquals(0, StreamUtils.getStringFromInputStream(new FileInputStream(filename)).length());
			
			//Write data back
			SerializeDB.writeSerializedObject(filename, newList);
			
		}  catch ( Exception e ) {
					System.out.println( "Exception >> " + e.getMessage() );
		}
		return newList;
		*************************************************************/
		List list = null;
		int i;
		try	{
				// read from serialized file the list of professors
				list = (ArrayList)SerializeDB.readSerializedObject(".\\data\\professor.dat");
				for (i = 0 ; i < list.size() ; i++) {
					Professor p = (Professor)list.get(i);
					System.out.println("name is " + p.getName() );
					System.out.println("contact is " + p.getContact() );
				}

				 list.remove(obj);  // remove the object from the list

				SerializeDB.writeSerializedObject(filename, list);
				//SerializeDB.deleteSerializedObject(".\\data\\professor.dat", p);

		}  catch ( Exception e ) {
					System.out.println( "Exception >> " + e.getMessage() );
		}
		return list;
		
	}
	
	public static List deleteSerializedObject(String filename, Object obj) {
		List list = null;
		int i;
		try	{
				// read from serialized file the list of professors
				list = (ArrayList)SerializeDB.readSerializedObject(filename);
				for (i = 0 ; i < list.size() ; i++) {
					Professor p = (Professor)list.get(i);
					System.out.println("name is " + p.getName() );
					System.out.println("contact is " + p.getContact() );
				}

				 list.remove(obj);  // remove the object from the list

				SerializeDB.writeSerializedObject(filename, list);
				//SerializeDB.deleteSerializedObject(".\\data\\professor.dat", p);

		}  catch ( Exception e ) {
					System.out.println( "Exception >> " + e.getMessage() );
		}
		return list;
	}

	public static void main(String[] args) {
		List list;
		List newList = null;
		int i;
		try	{
				// read from serialized file the list of professors
				//list = (ArrayList)SerializeDB.readSerializedObject(".\\data\\professor.dat"); 
			
				//Delete data
				Professor deletedProf = new Professor("Joseph","jos@ntu.edu.sg",67909999);
				list = (ArrayList)SerializeDB.deleteSerializedObject(".\\data\\professor.dat", deletedProf);
				for (i = 0 ; i < list.size() ; i++) {
					Professor p = (Professor)list.get(i);
					System.out.println("name is " + p.getName() );
					System.out.println("contact is " + p.getContact() );
				}

				// write to serialized file - update/insert/delete
				// example - add one more professor
				//Professor p = new Professor("Joseph","jos@ntu.edu.sg",67909999);
				// add to list
				//list.add(p);
				 //list.remove(p);  // remove if p equals object in the list

				//SerializeDB.writeSerializedObject(".\\data\\professor.dat", list);
				//SerializeDB.deleteSerializedObject(".\\data\\professor.dat", p);
				
				/******************************************************
				System.out.println("yes1");
				System.out.println("Size of list: " + list.size());
				for (i = 0 ; i < list.size() ; i++) {
					System.out.println("a");
					Professor prof = (Professor)list.get(i);
					System.out.println("b");
					System.out.println("prof.equals(p): " + prof.equals(p));
					if (!prof.equals(p)) {
						System.out.println("c");
						newList.add(p);   //Add data except the deleted
						System.out.println("d");
					}
					System.out.println("yes");
				}
				System.out.println("yes2");
				//Delete all data
				new FileOutputStream(".\\data\\professor.dat").close();
				//new PrintWriter(filename).close();
				//assertEquals(0, StreamUtils.getStringFromInputStream(new FileInputStream(FILE_PATH)).length());
				
				//Write data back
				SerializeDB.writeSerializedObject(".\\data\\professor.dat", newList);
				*************************************************************/

		}  catch ( Exception e ) {
					System.out.println( "Exception >> " + e.getMessage() );
		}
	}
}