package Controllers;
import Entities.Movie;

import java.util.ArrayList;
import java.util.Scanner;
import java.util.StringTokenizer;

import javax.swing.JTextArea;

public class MovieDetailsCtrl{

    public static boolean displayMovieDetails(String movieTitle) {
        ArrayList<Movie> movies = Movie.getAllMoviesData();
        
        //JTextArea text = new JTextArea(String text, 5, 100)
        
        for(Movie movie : movies){
            if(movieTitle.equalsIgnoreCase(movie.getTitle())){
            	System.out.println("");
            	
            	System.out.println(">>>>>>>>>>\n");
            	int num = 45;
            	String movieName = movie.getTitle() + " " + movie.getCensorship() + " (" + movie.getMovieType().getDescription() + ")";
            	num = (105 - movieName.length()) / 2 + 1;
            	
            	String str = "=".repeat(num) + " " + movieName + " " + "=".repeat(num);
            	
            	System.out.println("str.length(): " + (str.length()));
            	
            	System.out.println("* ".repeat(str.length() / 2 + 4));
            	
//            	String movieName = movie.getTitle() + " " + movie.getCensorship() + " - " + movie.getMovieType().getDescription();
//            	String str = "=".repeat(11) + " " + movieName + " " + "=".repeat(11);
            	
            	System.out.printf("*  %-" + (str.length() + 2) + "s*\n",str);
            	System.out.printf("*  %-" + (str.length() + 2) + "s*\n","\u2022 Status: " + movie.getStatus().getDescription());
            	System.out.printf("*  %-" + (str.length() + 2) + "s*\n","\u2022 Director: " + movie.getDirector());
            	System.out.printf("*  %-" + (str.length() + 2) + "s*\n","\u2022 Cast: " + movie.getCast());
            	
            	System.out.printf("*  %-" + (str.length() + 2) + "s*\n","\u2022 Synopsis: ");            	
            	ArrayList<String> strList = addLinebreaks(movie.getSynopsis(), 100);
            	for (String string : strList) {
            		System.out.printf("*  %-" + (str.length() + 2) + "s*\n","    " + string);
            	}
            	//System.out.printf("*  %-" + (str.length() + 2) + "s*\n","    " + addLinebreaks(movie.getSynopsis(), 100));
            	if (movie.getMovieReviews().size() > 1) {
            		System.out.printf("*  %-" + (str.length() + 2) + "s*\n","\u2022 Overall Rating: " + String.format("%.1f", movie.getAvgRating()));
            	} else {
            		System.out.printf("*  %-" + (str.length() + 2) + "s*\n","\u2022 Overall Rating: NA");
            	}
            	
            	System.out.printf("*  %-" + (str.length() + 2) + "s*\n","");
            	System.out.println("* ".repeat(str.length() / 2 + 4));
	
//	   			System.out.printf("*  %-51s*\n", "");
//	   			System.out.printf("*  %-51s*\n", "1) View details of a movie");
//	   			System.out.printf("*  %-51s*\n", "2) Return to main menu");
//	   			System.out.printf("*  %-51s*\n","");
	   			/* 
	   			System.out.println("* ".repeat(str.length() / 2 + 1));
	   			System.out.println("");
            	
        		System.out.println("Movie: " + movie.getTitle() + " " + movie.getCensorship() + " (" + movie.getMovieType().getDescription() + ")");
        		System.out.println("Status: " + movie.getStatus().getDescription());
        		System.out.println("Director: " + movie.getDirector());
        		System.out.println("Cast: " + movie.getCast());
        		JTextArea text = new JTextArea(movie.getSynopsis(), 5, 50);
        		text.setLineWrap(true);
        		text.setWrapStyleWord(true);
        		System.out.println("Synopsis: ");
        		System.out.println("    " + addLinebreaks(movie.getSynopsis(), 100));
        		System.out.print("Overall Rating: ");
        		if (movie.getMovieReviews().size() > 1)
        			System.out.println(String.format("%.1f", movie.getAvgRating()));
        		else
        			System.out.println("NA");
        			*/
        		return true;
            }
        }
        return false;
    }
    
//    public static String addLinebreaks(String input, int maxLineLength) {
//        StringTokenizer tok = new StringTokenizer(input, " ");
//        StringBuilder output = new StringBuilder(input.length());
//        int lineLen = 0;
//        while (tok.hasMoreTokens()) {
//            String word = tok.nextToken();
//
//            if (lineLen + word.length() > maxLineLength) {
//                output.append("\n    ");
//                lineLen = 0;
//            }
//            output.append(word);
//            output.append(" ");
//            lineLen += word.length() + 1;
//        }
//        return output.toString();
//    }
    
    public static ArrayList<String> addLinebreaks(String input, int maxLineLength) {
        StringTokenizer tok = new StringTokenizer(input, " ");
        StringBuilder output = new StringBuilder(input.length());
        ArrayList<String> strList = new ArrayList<>();
        int lineLen = 0;
        while (tok.hasMoreTokens()) {
            String word = tok.nextToken();

            if (lineLen + word.length() > maxLineLength) {
                //output.append("\n   ");
            	strList.add(output.toString());
            	output = new StringBuilder(input.length());
                lineLen = 0;
            }
            output.append(word);
            output.append(" ");
            lineLen += word.length() + 1;
        }
        strList.add(output.toString());
        return strList;
    }


}